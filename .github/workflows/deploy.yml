name: deploy

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

permissions:
  contents: write
  id-token: write

jobs:
  create-tag:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          show-progress: false
          ref: ${{ github.ref_name }}
          token: ${{ github.token }}

      - name: Get version
        id: get_version
        run: |
          echo "VERSION=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_OUTPUT

      - name: Output version
        id: version
        run: |
          echo "The version is ${{ steps.get_version.outputs.VERSION }}"
          echo "version=$(echo ${{ steps.get_version.outputs.VERSION }} | tr -d '"')" >> $GITHUB_OUTPUT
          echo "release_tag=$(echo v${{ steps.get_version.outputs.VERSION }} | tr -d '"')" >> $GITHUB_OUTPUT
    outputs:
      version: ${{ steps.version.outputs.version }}
      release_tag: ${{ steps.version.outputs.release_tag }}

  pyinstaller:
    needs: create-tag
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            path-suffix: "linux"

          - os: windows-latest
            path-suffix: "win"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          show-progress: false
          ref: ${{ github.ref_name }}
          token: ${{ github.token }}

      - name: Setup Node.js environment
        uses: actions/setup-python@v5
        with:
          python-version: "3.8"

      - name: Check release tag
        run: echo "The release_tag is ${{ needs.create-tag.outputs.release_tag }}"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r pythonScript/requirements.txt

      - name: Add library path
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          echo "LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH" >> $GITHUB_ENV

      - name: Build the application
        run: |
          pyinstaller -D -w pythonScript/UI/window.py -n sign-in-assistant --add-data "pythonScript/UI/resource/:./resource/" --icon=pythonScript/UI/resource/static/favicon.ico

      - name: Check build
        run: |
          ls dist/sign-in-assistant
          mkdir -p sign-in-assistant-${{ matrix.path-suffix }}
          mv dist/sign-in-assistant/* sign-in-assistant-${{ matrix.path-suffix }}/

      - name: Upload artifact for windows
        uses: actions/upload-artifact@v4
        with:
          name: sign-in-assistant-${{ matrix.path-suffix }}
          path: |
            sign-in-assistant-${{ matrix.path-suffix }}

  release:
    needs: [create-tag, pyinstaller]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          show-progress: false
          ref: ${{ github.ref_name }}
          token: ${{ github.token }}

      - name: Download artifact file for windows
        uses: actions/download-artifact@v4
        with:
          name: sign-in-assistant-win
          path: sign-in-assistant-win

      - name: Download artifact file for linux
        uses: actions/download-artifact@v4
        with:
          name: sign-in-assistant-linux
          path: sign-in-assistant-linux

      - name: Check download files
        run: |
          pwd
          mkdir output
          ls

      - name: Output zip in windows
        uses: montudor/action-zip@v1
        with:
          args: zip -qq -r ./output/sign-in-assistant-win.zip ./sign-in-assistant-win

      - name: Output zip in linux
        uses: montudor/action-zip@v1
        with:
          args: zip -qq -r ./output/sign-in-assistant-linux.zip ./sign-in-assistant-linux

      - name: Release to Github
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ github.token }}
          files: |
           output/*
      
      - name: Generate changelog
        run: |
          gh workflow run gen-changelog-release.yml --ref ${{ github.ref }}
        env:
          GH_TOKEN: ${{ github.token }}
